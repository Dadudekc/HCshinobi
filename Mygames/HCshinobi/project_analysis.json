{
    "discord_integration.py": {
        "language": ".py",
        "functions": [
            "run_bot"
        ],
        "classes": {},
        "routes": [],
        "complexity": 1
    },
    "create_character.py": {
        "language": ".py",
        "functions": [
            "main",
            "__init__",
            "_ensure_directories",
            "_load_template",
            "_get_input",
            "_get_list_input",
            "_get_number_input",
            "create_character"
        ],
        "classes": {
            "CharacterCreator": {
                "methods": [
                    "__init__",
                    "_ensure_directories",
                    "_load_template",
                    "_get_input",
                    "_get_list_input",
                    "_get_number_input",
                    "create_character"
                ],
                "docstring": null,
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 15
    },
    "diagnostic.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\run.py": {
        "language": ".py",
        "functions": [
            "main"
        ],
        "classes": {},
        "routes": [],
        "complexity": 1
    },
    "setup.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "fix_environment.py": {
        "language": ".py",
        "functions": [
            "check_python_version",
            "install_dependencies",
            "check_create_directories",
            "check_env_file",
            "seed_example_data",
            "check_discord_bot",
            "main"
        ],
        "classes": {},
        "routes": [],
        "complexity": 7
    },
    "post_devlog.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "test_env.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "test_bot.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\__init__.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\bot\\rolling.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\bot\\__init__.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "run.py": {
        "language": ".py",
        "functions": [
            "get_discord_token",
            "__init__",
            "calculate_progression_time"
        ],
        "classes": {
            "ShinobiHelpCommand": {
                "methods": [],
                "docstring": "Custom help command for the Shinobi bot.",
                "base_classes": [
                    "commands.HelpCommand"
                ]
            },
            "ShinobiBot": {
                "methods": [
                    "__init__",
                    "calculate_progression_time"
                ],
                "docstring": "Main bot class for HCshinobi.",
                "base_classes": [
                    "commands.Bot"
                ]
            }
        },
        "routes": [],
        "complexity": 5
    },
    "HCshinobi\\bot\\bot.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "clan_data",
            "log_error"
        ],
        "classes": {
            "HCBot": {
                "methods": [
                    "__init__",
                    "clan_data"
                ],
                "docstring": "Main bot class.",
                "base_classes": [
                    "commands.Bot"
                ]
            }
        },
        "routes": [],
        "complexity": 5
    },
    "HCshinobi\\ai\\npc_prompt_generator.py": {
        "language": ".py",
        "functions": [
            "generate_npc_content",
            "__init__",
            "format_prompt_data",
            "_get_system_prompt",
            "_format_npc_context",
            "generate_prompt",
            "mock_ai_response"
        ],
        "classes": {
            "NPCPromptGenerator": {
                "methods": [
                    "__init__",
                    "format_prompt_data",
                    "_get_system_prompt",
                    "_format_npc_context",
                    "generate_prompt",
                    "mock_ai_response"
                ],
                "docstring": "Generates prompts for AI models to create NPC-related content.\nSupports different AI providers: OpenAI API or local models.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 13
    },
    "HCshinobi\\bot\\config.py": {
        "language": ".py",
        "functions": [
            "find_env_file",
            "load_env_value",
            "convert_to_int",
            "load_config",
            "__post_init__",
            "_validate_config",
            "_is_valid_url",
            "from_env"
        ],
        "classes": {
            "BotConfig": {
                "methods": [
                    "__post_init__",
                    "_validate_config",
                    "_is_valid_url",
                    "from_env"
                ],
                "docstring": "Configuration class for the bot.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 12
    },
    "HCshinobi\\bot\\events.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "BotEvents": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Handles bot events and notifications.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\bot\\services.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "clan_data",
            "personality_modifiers",
            "character_system",
            "clan_system",
            "battle_system",
            "token_system",
            "npc_manager",
            "clan_assignment_engine",
            "character_manager",
            "battle_manager",
            "ollama_client",
            "openai_client",
            "webhook",
            "currency_system",
            "training_system",
            "quest_system",
            "mission_system",
            "clan_missions",
            "loot_system",
            "room_system",
            "progression_engine",
            "equipment_shop_system",
            "_check_initialized"
        ],
        "classes": {
            "ServiceContainer": {
                "methods": [
                    "__init__",
                    "clan_data",
                    "personality_modifiers",
                    "character_system",
                    "clan_system",
                    "battle_system",
                    "token_system",
                    "npc_manager",
                    "clan_assignment_engine",
                    "character_manager",
                    "battle_manager",
                    "ollama_client",
                    "openai_client",
                    "webhook",
                    "currency_system",
                    "training_system",
                    "quest_system",
                    "mission_system",
                    "clan_missions",
                    "loot_system",
                    "room_system",
                    "progression_engine",
                    "equipment_shop_system",
                    "_check_initialized"
                ],
                "docstring": "Container for all bot services.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 48
    },
    "HCshinobi\\bot\\setup.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "BotSetup": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Handles bot setup and initialization.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\bot\\cogs\\basic_commands.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "BasicCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Essential commands for all shinobi.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\bot\\cogs\\battle.py": {
        "language": ".py",
        "functions": [
            "create_battle_embed",
            "__init__",
            "__init__"
        ],
        "classes": {
            "BattleActionView": {
                "methods": [
                    "__init__"
                ],
                "docstring": "A Discord UI View containing buttons for player actions during battle.\n\nAttributes:\n    battle_id (str): The unique identifier for the battle.\n    battle_manager (BattleManager): The battle manager handling battle logic.\n    _interaction (Optional[discord.Interaction]): The interaction used for updates.\n    _message (Optional[discord.Message]): The original message to update.",
                "base_classes": [
                    "View"
                ]
            },
            "BattleCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Cog for initiating and managing battles.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 5
    },
    "HCshinobi\\bot\\cogs\\announcements.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_is_duplicate_announcement",
            "_calculate_similarity"
        ],
        "classes": {
            "AnnouncementCommands": {
                "methods": [
                    "__init__",
                    "_is_duplicate_announcement",
                    "_calculate_similarity"
                ],
                "docstring": "Commands for managing announcements.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 6
    },
    "HCshinobi\\bot\\cogs\\battle_system.py": {
        "language": ".py",
        "functions": [
            "create_battle_embed",
            "__init__",
            "__init__"
        ],
        "classes": {
            "BattleView": {
                "methods": [
                    "__init__"
                ],
                "docstring": "A view with buttons for battle actions.",
                "base_classes": [
                    "View"
                ]
            },
            "BattleSystemCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Handles the interactive battle UI and actions (separate from initial challenge).",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 5
    },
    "archive\\htmlcov\\coverage_html.js": {
        "language": ".js",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\bot\\cogs\\characters.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "CharacterCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Cog for handling character creation and management.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\bot\\cogs\\help.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "get_command_signature",
            "get_category"
        ],
        "classes": {
            "ShinobiHelpCommand": {
                "methods": [
                    "__init__",
                    "get_command_signature"
                ],
                "docstring": "Custom help command with enhanced formatting and explanations.",
                "base_classes": [
                    "commands.HelpCommand"
                ]
            }
        },
        "routes": [],
        "complexity": 5
    },
    "HCshinobi\\bot\\cogs\\npcs.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "__init__",
            "get_all_npcs",
            "convert_player_to_npc",
            "get_clans",
            "get_all_clans"
        ],
        "classes": {
            "NPCPromptGenerator": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Generates prompts, specifically death stories using OpenAI.",
                "base_classes": []
            },
            "NPCCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Cog for managing NPCs.\n\n- /mark_death: Mark a player as dead and convert them to an NPC.\n- /npc_list: List active NPCs, with optional clan filtering and autocomplete.\n\nRequires:\n    - NPCManager for conversion and listing.\n    - ClanData for retrieving merged clan information.\n    - Optionally, OpenAIClient for AI-generated death stories.",
                "base_classes": [
                    "commands.Cog"
                ]
            },
            "NPCManager": {
                "methods": [
                    "get_all_npcs",
                    "convert_player_to_npc",
                    "get_clans"
                ],
                "docstring": null,
                "base_classes": []
            },
            "ClanData": {
                "methods": [
                    "get_all_clans"
                ],
                "docstring": null,
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 12
    },
    "HCshinobi\\bot\\cogs\\clans.py": {
        "language": ".py",
        "functions": [
            "get_random_clan",
            "get_clan_info",
            "list_all_clans",
            "get_clans_by_tier",
            "__init__",
            "_get_mock_clan_data",
            "get_rarity_color",
            "__init__"
        ],
        "classes": {
            "ClanCommands": {
                "methods": [
                    "__init__",
                    "_get_mock_clan_data"
                ],
                "docstring": "Commands for clan management.",
                "base_classes": [
                    "commands.Cog"
                ]
            },
            "TokenError": {
                "methods": [],
                "docstring": null,
                "base_classes": [
                    "Exception"
                ]
            },
            "RarityTier": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 11
    },
    "HCshinobi\\bot\\cogs\\profiles.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "__init__"
        ],
        "classes": {
            "CharacterCreationView": {
                "methods": [
                    "__init__"
                ],
                "docstring": "View for handling character creation interview responses.",
                "base_classes": [
                    "discord.ui.View"
                ]
            },
            "ProfileCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Cog for viewing and managing character profiles.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 4
    },
    "HCshinobi\\bot\\cogs\\rolling.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "Rolling": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Commands related to RNG mechanics like dice rolls and clan assignments.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\bot\\cogs\\tokens.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "TokenCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Commands for token management and usage.",
                "base_classes": [
                    "commands.Cog"
                ]
            },
            "TokenError": {
                "methods": [],
                "docstring": null,
                "base_classes": [
                    "Exception"
                ]
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\bot\\cogs\\__init__.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\bot\\core\\events\\event_trigger_engine.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_load_lore_registry",
            "get_lore_for_trigger",
            "get_available_triggers",
            "get_lore_by_tags"
        ],
        "classes": {
            "EventTriggerEngine": {
                "methods": [
                    "__init__",
                    "_load_lore_registry",
                    "get_lore_for_trigger",
                    "get_available_triggers",
                    "get_lore_by_tags"
                ],
                "docstring": "Handles event-driven lore drops and announcements.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 10
    },
    "HCshinobi\\bot\\core\\events\\gameplay_events.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "GameplayEventHandler": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Handles automatic triggering of lore and announcements during gameplay.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\bot\\core\\notifications\\formatters.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\bot\\core\\notifications\\templates.py": {
        "language": ".py",
        "functions": [
            "_get_template",
            "_format_string",
            "_get_color",
            "battle_alert",
            "server_announcement",
            "lore_drop",
            "system_update",
            "training_mission",
            "system_alert"
        ],
        "classes": {},
        "routes": [],
        "complexity": 9
    },
    "HCshinobi\\bot\\core\\notifications\\notification_dispatcher.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "add_clan_channel",
            "remove_clan_channel"
        ],
        "classes": {
            "NotificationDispatcher": {
                "methods": [
                    "__init__",
                    "add_clan_channel",
                    "remove_clan_channel"
                ],
                "docstring": "Handles sending notifications via webhook with fallback support.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 6
    },
    "HCshinobi\\commands\\battle_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "__init__",
            "__init__",
            "create_embed",
            "update_buttons",
            "create_final_result_embed",
            "__init__"
        ],
        "classes": {
            "DuelConfirmationView": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.View"
                ]
            },
            "JutsuSelect": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.Select"
                ]
            },
            "BattleView": {
                "methods": [
                    "__init__",
                    "create_embed",
                    "update_buttons",
                    "create_final_result_embed"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.View"
                ]
            },
            "BattleCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 14
    },
    "HCshinobi\\commands\\announcement_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "register_app_commands"
        ],
        "classes": {
            "AnnouncementCommands": {
                "methods": [
                    "__init__",
                    "register_app_commands"
                ],
                "docstring": "Commands for managing announcements.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 4
    },
    "HCshinobi\\commands\\clan_commands.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "ClanCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\commands\\character_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "__init__",
            "create_question_embed",
            "get_clan_recommendation",
            "__init__",
            "__init__",
            "create_clan_selection_embed",
            "setup_select_options",
            "__init__",
            "__init__",
            "__init__",
            "__init__"
        ],
        "classes": {
            "CharacterNameModal": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.Modal"
                ]
            },
            "PersonalityQuizView": {
                "methods": [
                    "__init__",
                    "create_question_embed",
                    "get_clan_recommendation"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.View"
                ]
            },
            "ClanConfirmationView": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.View"
                ]
            },
            "ClanSelectionView": {
                "methods": [
                    "__init__",
                    "create_clan_selection_embed",
                    "setup_select_options"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.View"
                ]
            },
            "CharacterCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Commands for managing characters.",
                "base_classes": [
                    "commands.Cog"
                ]
            },
            "DeleteConfirmationView": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.View"
                ]
            },
            "TitleEquipView": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.View"
                ]
            },
            "TitleSelect": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.Select"
                ]
            }
        },
        "routes": [],
        "complexity": 24
    },
    "HCshinobi\\commands\\clan_mission_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "register_app_commands"
        ],
        "classes": {
            "ClanMissionCommands": {
                "methods": [
                    "__init__",
                    "register_app_commands"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 4
    },
    "HCshinobi\\commands\\currency_commands.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "CurrencyCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\commands\\devlog_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "to_dict",
            "from_dict",
            "create_embed",
            "__init__",
            "__init__",
            "__init__",
            "cog_unload",
            "load_logs",
            "save_logs",
            "is_ollama_available",
            "register_app_commands",
            "check"
        ],
        "classes": {
            "DevLogEntry": {
                "methods": [
                    "__init__",
                    "to_dict",
                    "from_dict",
                    "create_embed"
                ],
                "docstring": "Represents a development log entry.",
                "base_classes": []
            },
            "DevLogModal": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Modal for creating a new development log entry.",
                "base_classes": [
                    "ui.Modal"
                ]
            },
            "DevLogEntryMenu": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Menu for interacting with the DevLog system.",
                "base_classes": [
                    "ui.View"
                ]
            },
            "DevLogCommands": {
                "methods": [
                    "__init__",
                    "cog_unload",
                    "load_logs",
                    "save_logs",
                    "is_ollama_available",
                    "register_app_commands"
                ],
                "docstring": "Commands for developer logging and updates.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 25
    },
    "HCshinobi\\commands\\loot_commands.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "LootCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\commands\\quest_commands.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "QuestCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\commands\\mission_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "register_commands"
        ],
        "classes": {
            "MissionCommands": {
                "methods": [
                    "__init__",
                    "register_commands"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 4
    },
    "HCshinobi\\commands\\room_commands.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "RoomCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\core\\assignment_engine.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_load_history",
            "_save_history",
            "get_clan_weights",
            "assign_clan",
            "get_player_clan",
            "get_clan_population",
            "get_all_clan_populations",
            "get_rarity_statistics"
        ],
        "classes": {
            "ClanAssignmentEngine": {
                "methods": [
                    "__init__",
                    "_load_history",
                    "_save_history",
                    "get_clan_weights",
                    "assign_clan",
                    "get_player_clan",
                    "get_clan_population",
                    "get_all_clan_populations",
                    "get_rarity_statistics"
                ],
                "docstring": "Engine responsible for assigning clans to players based on various factors\n(randomness, personality, token boosts) and tracks assignment history.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 18
    },
    "HCshinobi\\commands\\training_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "get_intensity_description",
            "__init__"
        ],
        "classes": {
            "TrainingView": {
                "methods": [
                    "__init__",
                    "get_intensity_description"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.View"
                ]
            },
            "TrainingCommands": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 6
    },
    "HCshinobi\\core\\battle_manager.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_create_participant",
            "get_battle_state",
            "end_battle"
        ],
        "classes": {
            "BattleParticipant": {
                "methods": [],
                "docstring": "Represents a participant (player or AI) in a battle.",
                "base_classes": []
            },
            "BattleState": {
                "methods": [],
                "docstring": "Holds the state of an ongoing battle instance.",
                "base_classes": []
            },
            "BattleManagerError": {
                "methods": [],
                "docstring": "Custom exception for Battle Manager errors.",
                "base_classes": [
                    "Exception"
                ]
            },
            "BattleManager": {
                "methods": [
                    "__init__",
                    "_create_participant",
                    "get_battle_state",
                    "end_battle"
                ],
                "docstring": "Handles the creation, state management, and progression of battles.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 8
    },
    "HCshinobi\\core\\battle_system.py": {
        "language": ".py",
        "functions": [
            "update_start_time",
            "update_last_action",
            "__hash__",
            "__eq__",
            "to_dict",
            "__init__",
            "_add_to_battle_log",
            "get_battle_state",
            "get_battle_id_for_player"
        ],
        "classes": {
            "BattleState": {
                "methods": [
                    "update_start_time",
                    "update_last_action",
                    "__hash__",
                    "__eq__",
                    "to_dict"
                ],
                "docstring": "Represents the state of a battle.",
                "base_classes": []
            },
            "BattleSystem": {
                "methods": [
                    "__init__",
                    "_add_to_battle_log",
                    "get_battle_state",
                    "get_battle_id_for_player"
                ],
                "docstring": "System for managing character battles.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 18
    },
    "HCshinobi\\core\\character_manager.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_load_characters",
            "get_character",
            "get_all_characters",
            "save_character",
            "reload_characters"
        ],
        "classes": {
            "CharacterManager": {
                "methods": [
                    "__init__",
                    "_load_characters",
                    "get_character",
                    "get_all_characters",
                    "save_character",
                    "reload_characters"
                ],
                "docstring": "Handles loading and accessing character data from JSON files.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 12
    },
    "HCshinobi\\core\\character.py": {
        "language": ".py",
        "functions": [
            "__post_init__",
            "from_dict",
            "to_dict",
            "add_exp",
            "level_up",
            "heal",
            "restore_chakra",
            "restore_stamina",
            "take_damage",
            "use_chakra",
            "use_stamina",
            "add_jutsu",
            "remove_jutsu",
            "add_item",
            "remove_item",
            "equip_item",
            "unequip_item",
            "add_status_effect",
            "remove_status_effect",
            "record_battle_result"
        ],
        "classes": {
            "Character": {
                "methods": [
                    "__post_init__",
                    "from_dict",
                    "to_dict",
                    "add_exp",
                    "level_up",
                    "heal",
                    "restore_chakra",
                    "restore_stamina",
                    "take_damage",
                    "use_chakra",
                    "use_stamina",
                    "add_jutsu",
                    "remove_jutsu",
                    "add_item",
                    "remove_item",
                    "equip_item",
                    "unequip_item",
                    "add_status_effect",
                    "remove_status_effect",
                    "record_battle_result"
                ],
                "docstring": "Represents a character in the game.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 40
    },
    "HCshinobi\\core\\character_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "get_character_by_name",
            "get_all_characters"
        ],
        "classes": {
            "CharacterSystem": {
                "methods": [
                    "__init__",
                    "get_character_by_name",
                    "get_all_characters"
                ],
                "docstring": "Manages character data loading, saving, and retrieval.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 6
    },
    "HCshinobi\\core\\clan_data.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "initialize",
            "load_clans",
            "save_clans",
            "create_default_clans",
            "get_clans",
            "get_clan",
            "get_clan_rarity",
            "get_clan_bonuses",
            "get_clan_jutsu",
            "get_random_clan",
            "get_all_clans",
            "get_clan_by_name",
            "get_clans_by_rarity",
            "add_clan",
            "update_clan",
            "remove_clan",
            "get_clan_base_weights",
            "__init__",
            "load_clans",
            "get_player_clan",
            "get_all_clan_populations",
            "assign_clan"
        ],
        "classes": {
            "ClanData": {
                "methods": [
                    "__init__",
                    "initialize",
                    "load_clans",
                    "save_clans",
                    "create_default_clans",
                    "get_clans",
                    "get_clan",
                    "get_clan_rarity",
                    "get_clan_bonuses",
                    "get_clan_jutsu",
                    "get_random_clan",
                    "get_all_clans",
                    "get_clan_by_name",
                    "get_clans_by_rarity",
                    "add_clan",
                    "update_clan",
                    "remove_clan",
                    "get_clan_base_weights"
                ],
                "docstring": "Manages data related to clans, loading from and saving to a file.\nProvides methods to access and manipulate clan information.",
                "base_classes": []
            },
            "ClanAssignmentEngine": {
                "methods": [
                    "__init__",
                    "load_clans",
                    "get_player_clan",
                    "get_all_clan_populations",
                    "assign_clan"
                ],
                "docstring": "Engine for handling clan assignments and management.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 46
    },
    "HCshinobi\\core\\clan_assignment_engine.py": {
        "language": ".py",
        "functions": [
            "simulate_clan_assignment",
            "__init__",
            "load_clans",
            "_load_clan_population_data",
            "_save_clan_population_data",
            "_calculate_base_weights",
            "_apply_population_adjustments",
            "_apply_token_boost",
            "_normalize_weights",
            "_apply_personality_modifiers",
            "assign_clan",
            "mark_player_death",
            "get_player_clan"
        ],
        "classes": {
            "ClanAssignmentEngine": {
                "methods": [
                    "__init__",
                    "load_clans",
                    "_load_clan_population_data",
                    "_save_clan_population_data",
                    "_calculate_base_weights",
                    "_apply_population_adjustments",
                    "_apply_token_boost",
                    "_normalize_weights",
                    "_apply_personality_modifiers",
                    "assign_clan",
                    "mark_player_death",
                    "get_player_clan"
                ],
                "docstring": "Main engine for assigning clans to players based on weighted probabilities,\nadjusted by population, personality traits, and token boosts.\nHandles persistence of clan population data.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 25
    },
    "HCshinobi\\core\\clan_missions.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "load_missions",
            "save_missions",
            "get_player_missions",
            "assign_missions",
            "complete_mission",
            "get_mission_reward",
            "get_next_refresh_time"
        ],
        "classes": {
            "ClanMissions": {
                "methods": [
                    "__init__",
                    "load_missions",
                    "save_missions",
                    "get_player_missions",
                    "assign_missions",
                    "complete_mission",
                    "get_mission_reward",
                    "get_next_refresh_time"
                ],
                "docstring": "Manages clan-specific missions and challenges.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 16
    },
    "HCshinobi\\core\\clan_system.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "ClanSystem": {
                "methods": [
                    "__init__"
                ],
                "docstring": "System for managing clans.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\core\\constants.py": {
        "language": ".py",
        "functions": [],
        "classes": {
            "RarityTier": {
                "methods": [],
                "docstring": null,
                "base_classes": [
                    "Enum"
                ]
            }
        },
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\core\\currency_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "load_currency_data",
            "save_currency_data",
            "get_player_balance",
            "set_player_balance",
            "add_to_balance",
            "deduct_from_balance",
            "has_sufficient_funds",
            "transfer_funds"
        ],
        "classes": {
            "CurrencySystem": {
                "methods": [
                    "__init__",
                    "load_currency_data",
                    "save_currency_data",
                    "get_player_balance",
                    "set_player_balance",
                    "add_to_balance",
                    "deduct_from_balance",
                    "has_sufficient_funds",
                    "transfer_funds"
                ],
                "docstring": "Manages in-game currency for players.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 18
    },
    "HCshinobi\\core\\engine.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "check_daily_reset",
            "_perform_daily_reset",
            "start_battle",
            "end_battle",
            "start_training",
            "complete_training",
            "get_battle_status",
            "get_training_status",
            "use_jutsu"
        ],
        "classes": {
            "Engine": {
                "methods": [
                    "__init__",
                    "check_daily_reset",
                    "_perform_daily_reset",
                    "start_battle",
                    "end_battle",
                    "start_training",
                    "complete_training",
                    "get_battle_status",
                    "get_training_status",
                    "use_jutsu"
                ],
                "docstring": "Core game engine that manages all systems and their interactions.\nHandles game state, system coordination, and game mechanics.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 20
    },
    "HCshinobi\\core\\jutsu_data.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_load_jutsu_data",
            "get_jutsu_info",
            "get_jutsu_chakra_cost",
            "get_jutsu_rank",
            "get_jutsu_description",
            "get_jutsu_hand_seals",
            "get_jutsu_by_rank"
        ],
        "classes": {
            "JutsuData": {
                "methods": [
                    "__init__",
                    "_load_jutsu_data",
                    "get_jutsu_info",
                    "get_jutsu_chakra_cost",
                    "get_jutsu_rank",
                    "get_jutsu_description",
                    "get_jutsu_hand_seals",
                    "get_jutsu_by_rank"
                ],
                "docstring": "Manages jutsu data and operations.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 16
    },
    "HCshinobi\\core\\loot_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "can_drop_loot",
            "generate_loot_drop",
            "get_next_drop_time"
        ],
        "classes": {
            "LootSystem": {
                "methods": [
                    "__init__",
                    "can_drop_loot",
                    "generate_loot_drop",
                    "get_next_drop_time"
                ],
                "docstring": "Handles random loot drops in the chat.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 8
    },
    "HCshinobi\\core\\mission_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "get_active_mission",
            "get_completed_missions",
            "get_available_missions"
        ],
        "classes": {
            "MissionSystem": {
                "methods": [
                    "__init__",
                    "get_active_mission",
                    "get_completed_missions",
                    "get_available_missions"
                ],
                "docstring": "Manages missions using a consolidated data structure.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 8
    },
    "HCshinobi\\core\\npc_manager.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_load_npcs",
            "_save_npcs",
            "_get_active_npc_count",
            "convert_player_to_npc",
            "get_npc",
            "get_npc_by_former_player",
            "get_all_npcs",
            "get_npcs_by_clan",
            "get_active_npcs",
            "update_npc",
            "deactivate_npc",
            "record_npc_interaction",
            "add_plot_hook",
            "mark_plot_hook_used"
        ],
        "classes": {
            "NPCManagerError": {
                "methods": [],
                "docstring": "Custom exception for NPC Manager errors.",
                "base_classes": [
                    "Exception"
                ]
            },
            "NPCManager": {
                "methods": [
                    "__init__",
                    "_load_npcs",
                    "_save_npcs",
                    "_get_active_npc_count",
                    "convert_player_to_npc",
                    "get_npc",
                    "get_npc_by_former_player",
                    "get_all_npcs",
                    "get_npcs_by_clan",
                    "get_active_npcs",
                    "update_npc",
                    "deactivate_npc",
                    "record_npc_interaction",
                    "add_plot_hook",
                    "mark_plot_hook_used"
                ],
                "docstring": "Manages NPC lifecycle, including player-to-NPC conversion,\ndata storage, and NPC interaction capabilities.\nEnforces NPC limits (MAX_NPC_COUNT).",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 30
    },
    "HCshinobi\\core\\personality_modifiers.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "initialize",
            "_load_or_create_modifiers",
            "_save_modifiers",
            "_create_default_modifiers",
            "get_clan_modifiers",
            "get_all_personalities",
            "add_personality",
            "update_personality",
            "remove_personality",
            "get_suggested_personalities_for_clan"
        ],
        "classes": {
            "PersonalityModifiers": {
                "methods": [
                    "__init__",
                    "initialize",
                    "_load_or_create_modifiers",
                    "_save_modifiers",
                    "_create_default_modifiers",
                    "get_clan_modifiers",
                    "get_all_personalities",
                    "add_personality",
                    "update_personality",
                    "remove_personality",
                    "get_suggested_personalities_for_clan"
                ],
                "docstring": "Manages personality-based modifiers for clan assignment, loading from \nand saving to a JSON file.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 22
    },
    "HCshinobi\\core\\quest_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_load_quests",
            "_load_active_quests",
            "_load_completed_quests",
            "_save_active_quests",
            "_save_completed_quests",
            "get_available_quests",
            "accept_quest",
            "complete_quest",
            "get_active_quests",
            "update_quest_progress",
            "_meets_requirements",
            "_is_quest_complete"
        ],
        "classes": {
            "QuestSystem": {
                "methods": [
                    "__init__",
                    "_load_quests",
                    "_load_active_quests",
                    "_load_completed_quests",
                    "_save_active_quests",
                    "_save_completed_quests",
                    "get_available_quests",
                    "accept_quest",
                    "complete_quest",
                    "get_active_quests",
                    "update_quest_progress",
                    "_meets_requirements",
                    "_is_quest_complete"
                ],
                "docstring": "Manages quests and quest-related operations.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 26
    },
    "HCshinobi\\core\\room_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "get_available_rooms",
            "_can_access_room",
            "get_room_npcs",
            "create_npc_character",
            "start_npc_battle",
            "end_npc_battle",
            "is_in_battle"
        ],
        "classes": {
            "RoomSystem": {
                "methods": [
                    "__init__",
                    "get_available_rooms",
                    "_can_access_room",
                    "get_room_npcs",
                    "create_npc_character",
                    "start_npc_battle",
                    "end_npc_battle",
                    "is_in_battle"
                ],
                "docstring": "Handles room access and NPC battles.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 16
    },
    "HCshinobi\\core\\token_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "initialize",
            "_load_tokens",
            "_save_tokens",
            "_load_log",
            "_save_log",
            "get_player_tokens",
            "use_tokens_for_clan_boost",
            "use_tokens_for_reroll",
            "get_player_unlocks",
            "has_unlock"
        ],
        "classes": {
            "TokenSystem": {
                "methods": [
                    "__init__",
                    "initialize",
                    "_load_tokens",
                    "_save_tokens",
                    "_load_log",
                    "_save_log",
                    "get_player_tokens",
                    "use_tokens_for_clan_boost",
                    "use_tokens_for_reroll",
                    "get_player_unlocks",
                    "has_unlock"
                ],
                "docstring": "Manages tokens for players: balances, unlocks, spending, logging.\nUses TOKEN_FILE for state and TOKEN_LOG_FILE for history.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 22
    },
    "HCshinobi\\core\\__init__.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\core\\training_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "get_multipliers",
            "__init__",
            "to_dict",
            "from_dict",
            "__init__",
            "_initialize_achievements",
            "_load_training_data",
            "_save_training_data",
            "load_achievements",
            "save_achievements",
            "check_achievements",
            "load_sessions",
            "load_history",
            "save_history",
            "_get_training_cost",
            "is_on_cooldown",
            "get_training_status",
            "get_training_history",
            "_get_base_gain",
            "_get_injury_params",
            "_get_cooldown_duration",
            "_format_timedelta"
        ],
        "classes": {
            "TrainingAchievement": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Represents a training achievement.",
                "base_classes": []
            },
            "TrainingIntensity": {
                "methods": [
                    "get_multipliers"
                ],
                "docstring": "Represents different training intensity levels.",
                "base_classes": []
            },
            "TrainingSession": {
                "methods": [
                    "__init__",
                    "to_dict",
                    "from_dict"
                ],
                "docstring": "Represents an active training session.",
                "base_classes": []
            },
            "TrainingSystem": {
                "methods": [
                    "__init__",
                    "_initialize_achievements",
                    "_load_training_data",
                    "_save_training_data",
                    "load_achievements",
                    "save_achievements",
                    "check_achievements",
                    "load_sessions",
                    "load_history",
                    "save_history",
                    "_get_training_cost",
                    "is_on_cooldown",
                    "get_training_status",
                    "get_training_history",
                    "_get_base_gain",
                    "_get_injury_params",
                    "_get_cooldown_duration",
                    "_format_timedelta"
                ],
                "docstring": "Manages character training sessions.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 46
    },
    "HCshinobi\\tests\\test_battle_system.py": {
        "language": ".py",
        "functions": [
            "mock_character_system",
            "battle_system",
            "test_characters"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "HCshinobi\\tests\\test_bot.py": {
        "language": ".py",
        "functions": [
            "mock_config",
            "mock_services",
            "mock_bot"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "HCshinobi\\tests\\test_character_system.py": {
        "language": ".py",
        "functions": [
            "character_system_instance",
            "test_character_data"
        ],
        "classes": {},
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\tests\\test_bot_init.py": {
        "language": ".py",
        "functions": [
            "mock_config",
            "mock_services",
            "mock_bot"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "HCshinobi\\tests\\test_config.py": {
        "language": ".py",
        "functions": [
            "mock_env",
            "test_config_initialization",
            "test_config_from_env",
            "test_config_missing_required",
            "test_config_invalid_values"
        ],
        "classes": {},
        "routes": [],
        "complexity": 5
    },
    "HCshinobi\\tests\\test_currency_system.py": {
        "language": ".py",
        "functions": [
            "currency_system",
            "test_initialization",
            "test_load_currency_data",
            "test_save_currency_data",
            "test_get_player_balance",
            "test_set_player_balance",
            "test_add_to_balance",
            "test_deduct_from_balance",
            "test_has_sufficient_funds",
            "test_transfer_funds"
        ],
        "classes": {},
        "routes": [],
        "complexity": 10
    },
    "HCshinobi\\tests\\test_events.py": {
        "language": ".py",
        "functions": [
            "mock_config",
            "mock_services",
            "mock_bot"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "HCshinobi\\tests\\test_run_bot.py": {
        "language": ".py",
        "functions": [
            "mock_config",
            "mock_services"
        ],
        "classes": {},
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\tests\\test_services.py": {
        "language": ".py",
        "functions": [
            "mock_config"
        ],
        "classes": {},
        "routes": [],
        "complexity": 1
    },
    "HCshinobi\\tests\\core\\test_clan_data.py": {
        "language": ".py",
        "functions": [
            "mock_logger",
            "mock_clan_data_content",
            "clan_data_instance",
            "test_initialization",
            "test_load_existing_clans",
            "test_load_invalid_data",
            "test_get_all_clans",
            "test_get_clan_by_name",
            "test_get_clans_by_rarity",
            "test_get_clan_base_weights",
            "selective_load"
        ],
        "classes": {},
        "routes": [],
        "complexity": 11
    },
    "HCshinobi\\tests\\core\\test_token_system.py": {
        "language": ".py",
        "functions": [
            "mock_token_data",
            "token_system",
            "selective_load"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "HCshinobi\\tests\\core\\test_personality_modifiers.py": {
        "language": ".py",
        "functions": [
            "mock_modifier_data",
            "personality_modifiers_instance",
            "test_initialization",
            "test_load_existing_modifiers",
            "test_load_invalid_data",
            "test_get_clan_modifiers",
            "test_get_all_personalities",
            "selective_load"
        ],
        "classes": {},
        "routes": [],
        "complexity": 8
    },
    "HCshinobi\\tests\\extensions\\test_announcements.py": {
        "language": ".py",
        "functions": [
            "mock_config",
            "mock_services",
            "mock_bot",
            "mock_interaction",
            "cog"
        ],
        "classes": {},
        "routes": [],
        "complexity": 5
    },
    "HCshinobi\\tests\\extensions\\test_clans.py": {
        "language": ".py",
        "functions": [
            "mock_bot",
            "mock_interaction",
            "mock_character",
            "cog",
            "test_get_rarity_color"
        ],
        "classes": {},
        "routes": [],
        "complexity": 5
    },
    "HCshinobi\\tests\\extensions\\test_rolling.py": {
        "language": ".py",
        "functions": [
            "mock_config",
            "mock_services",
            "mock_bot"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "HCshinobi\\utils\\discord_ui.py": {
        "language": ".py",
        "functions": [
            "get_rarity_color"
        ],
        "classes": {},
        "routes": [],
        "complexity": 1
    },
    "HCshinobi\\utils\\embed_utils.py": {
        "language": ".py",
        "functions": [
            "get_rarity_color",
            "get_rarity_emoji"
        ],
        "classes": {},
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\utils\\file_io.py": {
        "language": ".py",
        "functions": [
            "ensure_directory",
            "load_json",
            "save_json"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "HCshinobi\\utils\\logging.py": {
        "language": ".py",
        "functions": [
            "setup_logging",
            "log_event",
            "get_logger",
            "log_error",
            "log_command"
        ],
        "classes": {},
        "routes": [],
        "complexity": 5
    },
    "HCshinobi\\utils\\ollama_client.py": {
        "language": ".py",
        "functions": [
            "__init__"
        ],
        "classes": {
            "OllamaError": {
                "methods": [],
                "docstring": "Custom exception for Ollama client errors.",
                "base_classes": [
                    "Exception"
                ]
            },
            "OllamaClient": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Handles asynchronous communication with an Ollama API endpoint.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 2
    },
    "HCshinobi\\utils\\openai_client.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "prompt_for_api_key",
            "is_booted",
            "get_openai_driver",
            "save_openai_cookies",
            "load_openai_cookies",
            "is_logged_in",
            "boot",
            "_assert_ready",
            "process_prompt",
            "get_chatgpt_response",
            "get_full_response",
            "send_prompt_smoothly",
            "login_openai",
            "_save_page_source",
            "shutdown",
            "_force_kill_chromedriver"
        ],
        "classes": {
            "OpenAIClient": {
                "methods": [
                    "__init__",
                    "prompt_for_api_key",
                    "is_booted",
                    "get_openai_driver",
                    "save_openai_cookies",
                    "load_openai_cookies",
                    "is_logged_in",
                    "boot",
                    "_assert_ready",
                    "process_prompt",
                    "get_chatgpt_response",
                    "get_full_response",
                    "send_prompt_smoothly",
                    "login_openai",
                    "_save_page_source",
                    "shutdown",
                    "_force_kill_chromedriver"
                ],
                "docstring": null,
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 34
    },
    "HCshinobi\\utils\\__init__.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "tests\\test_commands.py": {
        "language": ".py",
        "functions": [
            "mock_client",
            "character_system",
            "clan_data",
            "character_commands",
            "mock_bot",
            "mock_interaction",
            "announcement_commands"
        ],
        "classes": {},
        "routes": [],
        "complexity": 7
    },
    "tests\\test_bot_commands.py": {
        "language": ".py",
        "functions": [
            "mock_config",
            "mock_services",
            "mock_user",
            "mock_channel",
            "mock_guild",
            "mock_bot",
            "mock_message"
        ],
        "classes": {},
        "routes": [],
        "complexity": 7
    },
    "_discord\\__init__.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "_discord\\extensions\\__init__.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "run_with_debug.py": {
        "language": ".py",
        "functions": [
            "main"
        ],
        "classes": {},
        "routes": [],
        "complexity": 1
    },
    "test_discord_bot.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "dream_modules\\check_modules.py": {
        "language": ".py",
        "functions": [
            "setup_test_dirs",
            "check_character_model",
            "check_clan_model",
            "check_character_manager",
            "check_clan_manager",
            "check_service_container",
            "main",
            "get_name"
        ],
        "classes": {
            "TestService": {
                "methods": [
                    "get_name"
                ],
                "docstring": null,
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 9
    },
    "dream_modules\\example_bot.py": {
        "language": ".py",
        "functions": [
            "setup_directories",
            "create_example_clans",
            "main"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "dream_modules\\factory.py": {
        "language": ".py",
        "functions": [
            "create_character_system",
            "create_clan_system",
            "create_character_commands",
            "setup_rpg_systems",
            "shutdown_all_systems"
        ],
        "classes": {},
        "routes": [],
        "complexity": 5
    },
    "dream_modules\\__init__.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "dream_modules\\test_runner.py": {
        "language": ".py",
        "functions": [
            "main",
            "__init__",
            "_setup_logging",
            "run_test",
            "run_all_tests",
            "generate_report",
            "save_report",
            "cleanup"
        ],
        "classes": {
            "TestResult": {
                "methods": [],
                "docstring": "Container for test results.",
                "base_classes": []
            },
            "TestRunner": {
                "methods": [
                    "__init__",
                    "_setup_logging",
                    "run_test",
                    "run_all_tests",
                    "generate_report",
                    "save_report",
                    "cleanup"
                ],
                "docstring": "Test runner for dream modules.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 15
    },
    "dream_modules\\core\\service_container.py": {
        "language": ".py",
        "functions": [
            "get_container",
            "__init__",
            "register",
            "register_factory",
            "get",
            "has",
            "remove",
            "clear"
        ],
        "classes": {
            "ServiceContainer": {
                "methods": [
                    "__init__",
                    "register",
                    "register_factory",
                    "get",
                    "has",
                    "remove",
                    "clear"
                ],
                "docstring": "Container for managing services and dependencies.\n\nThis class provides methods for registering and retrieving services,\nsupporting dependency injection patterns.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 15
    },
    "dream_modules\\core\\module_interface.py": {
        "language": ".py",
        "functions": [
            "initialize",
            "shutdown",
            "name",
            "version",
            "description",
            "get_status",
            "register_dependency",
            "get_service_interface",
            "update_config",
            "get_config",
            "validate_config"
        ],
        "classes": {
            "ModuleInterface": {
                "methods": [
                    "initialize",
                    "shutdown",
                    "name",
                    "version",
                    "description",
                    "get_status"
                ],
                "docstring": "Base interface that all Dream.OS modules must implement.",
                "base_classes": [
                    "ABC"
                ]
            },
            "ServiceInterface": {
                "methods": [
                    "register_dependency",
                    "get_service_interface"
                ],
                "docstring": "Interface for modules that provide services to other modules.",
                "base_classes": [
                    "ModuleInterface"
                ]
            },
            "ConfigurableModule": {
                "methods": [
                    "update_config",
                    "get_config",
                    "validate_config"
                ],
                "docstring": "Interface for modules that support runtime configuration changes.",
                "base_classes": [
                    "ModuleInterface"
                ]
            }
        },
        "routes": [],
        "complexity": 22
    },
    "dream_modules\\modules\\character\\character_manager.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "initialize",
            "shutdown",
            "name",
            "version",
            "description",
            "get_status",
            "register_dependency",
            "get_service_interface",
            "create_character",
            "get_character",
            "update_character",
            "delete_character",
            "get_all_characters",
            "save_character",
            "load_character",
            "_load_characters",
            "_save_all_characters",
            "_create_backup"
        ],
        "classes": {
            "CharacterManager": {
                "methods": [
                    "__init__",
                    "initialize",
                    "shutdown",
                    "name",
                    "version",
                    "description",
                    "get_status",
                    "register_dependency",
                    "get_service_interface",
                    "create_character",
                    "get_character",
                    "update_character",
                    "delete_character",
                    "get_all_characters",
                    "save_character",
                    "load_character",
                    "_load_characters",
                    "_save_all_characters",
                    "_create_backup"
                ],
                "docstring": "Character management service.\n\nThis service provides methods for managing characters, including\ncreation, retrieval, updating, and deletion.",
                "base_classes": [
                    "ServiceInterface"
                ]
            }
        },
        "routes": [],
        "complexity": 38
    },
    "dream_modules\\modules\\character\\character_model.py": {
        "language": ".py",
        "functions": [
            "__post_init__",
            "stats",
            "to_dict",
            "from_dict",
            "to_json",
            "from_json",
            "add_exp",
            "add_item",
            "remove_item",
            "learn_jutsu",
            "forget_jutsu",
            "add_status",
            "remove_status",
            "heal",
            "damage",
            "restore_chakra",
            "use_chakra"
        ],
        "classes": {
            "Character": {
                "methods": [
                    "__post_init__",
                    "stats",
                    "to_dict",
                    "from_dict",
                    "to_json",
                    "from_json",
                    "add_exp",
                    "add_item",
                    "remove_item",
                    "learn_jutsu",
                    "forget_jutsu",
                    "add_status",
                    "remove_status",
                    "heal",
                    "damage",
                    "restore_chakra",
                    "use_chakra"
                ],
                "docstring": "Character model for the RPG system.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 34
    },
    "dream_modules\\modules\\clan\\clan_model.py": {
        "language": ".py",
        "functions": [
            "to_dict",
            "from_dict",
            "to_json",
            "from_json",
            "get_stat_bonus",
            "set_stat_bonus",
            "add_starting_jutsu",
            "remove_starting_jutsu",
            "add_special_technique",
            "remove_special_technique"
        ],
        "classes": {
            "Clan": {
                "methods": [
                    "to_dict",
                    "from_dict",
                    "to_json",
                    "from_json",
                    "get_stat_bonus",
                    "set_stat_bonus",
                    "add_starting_jutsu",
                    "remove_starting_jutsu",
                    "add_special_technique",
                    "remove_special_technique"
                ],
                "docstring": "Clan model for the RPG system.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 20
    },
    "dream_modules\\modules\\clan\\clan_manager.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "initialize",
            "shutdown",
            "name",
            "version",
            "description",
            "get_status",
            "register_dependency",
            "get_service_interface",
            "get_clan",
            "get_all_clans",
            "get_clans_by_rarity",
            "get_clan_bonuses",
            "get_clan_jutsu",
            "create_clan",
            "update_clan",
            "delete_clan",
            "_load_clans",
            "_save_all_clans"
        ],
        "classes": {
            "ClanManager": {
                "methods": [
                    "__init__",
                    "initialize",
                    "shutdown",
                    "name",
                    "version",
                    "description",
                    "get_status",
                    "register_dependency",
                    "get_service_interface",
                    "get_clan",
                    "get_all_clans",
                    "get_clans_by_rarity",
                    "get_clan_bonuses",
                    "get_clan_jutsu",
                    "create_clan",
                    "update_clan",
                    "delete_clan",
                    "_load_clans",
                    "_save_all_clans"
                ],
                "docstring": "Clan management service.\n\nThis service provides methods for managing clan data,\nincluding retrieval and updating of clan information.",
                "base_classes": [
                    "ServiceInterface"
                ]
            }
        },
        "routes": [],
        "complexity": 38
    },
    "dream_modules\\modules\\discord\\character_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "__init__",
            "__init__",
            "initialize",
            "shutdown",
            "name",
            "version",
            "description",
            "get_status",
            "register_dependency",
            "get_service_interface",
            "register_commands",
            "_create_character_embed",
            "__init__"
        ],
        "classes": {
            "DeleteConfirmationView": {
                "methods": [
                    "__init__"
                ],
                "docstring": "View for confirming character deletion.",
                "base_classes": [
                    "ui.View"
                ]
            },
            "CharacterNameModal": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Modal for entering character name during creation.",
                "base_classes": [
                    "ui.Modal"
                ]
            },
            "CharacterCommands": {
                "methods": [
                    "__init__",
                    "initialize",
                    "shutdown",
                    "name",
                    "version",
                    "description",
                    "get_status",
                    "register_dependency",
                    "get_service_interface",
                    "register_commands",
                    "_create_character_embed"
                ],
                "docstring": "Discord commands for character management.\n\nThis service provides Discord commands for managing characters,\nintegrating with the character and clan services.",
                "base_classes": [
                    "ServiceInterface"
                ]
            },
            "CreateOptionsView": {
                "methods": [
                    "__init__"
                ],
                "docstring": null,
                "base_classes": [
                    "ui.View"
                ]
            }
        },
        "routes": [],
        "complexity": 28
    },
    "dream_modules\\command_invoker.py": {
        "language": ".py",
        "functions": [
            "__str__",
            "__init__",
            "get_option",
            "response",
            "__init__"
        ],
        "classes": {
            "MockUser": {
                "methods": [
                    "__str__"
                ],
                "docstring": "Mock Discord user for testing.",
                "base_classes": []
            },
            "MockGuild": {
                "methods": [],
                "docstring": "Mock Discord guild for testing.",
                "base_classes": []
            },
            "MockInteraction": {
                "methods": [
                    "__init__",
                    "get_option",
                    "response"
                ],
                "docstring": "Mock Discord interaction for testing slash commands.",
                "base_classes": []
            },
            "CommandInvoker": {
                "methods": [
                    "__init__"
                ],
                "docstring": "Test invoker for Discord slash commands.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 10
    },
    "fix_character_ids.py": {
        "language": ".py",
        "functions": [
            "fix_character_files"
        ],
        "classes": {},
        "routes": [],
        "complexity": 1
    },
    "fix_character_files.py": {
        "language": ".py",
        "functions": [
            "fix_character_files"
        ],
        "classes": {},
        "routes": [],
        "complexity": 1
    },
    "temp_jutsu_data_generator.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\__main__.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\commands\\shop_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_load_item_shop_data"
        ],
        "classes": {
            "ShopType": {
                "methods": [],
                "docstring": null,
                "base_classes": [
                    "Enum"
                ]
            },
            "ShopCommands": {
                "methods": [
                    "__init__",
                    "_load_item_shop_data"
                ],
                "docstring": null,
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 4
    },
    "HCshinobi\\core\\clan.py": {
        "language": ".py",
        "functions": [
            "to_dict",
            "from_dict"
        ],
        "classes": {
            "Clan": {
                "methods": [
                    "to_dict",
                    "from_dict"
                ],
                "docstring": "Clan model class.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 4
    },
    "HCshinobi\\core\\jutsu_shop_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_needs_refresh",
            "get_current_shop_inventory_details"
        ],
        "classes": {
            "JutsuShopSystem": {
                "methods": [
                    "__init__",
                    "_needs_refresh",
                    "get_current_shop_inventory_details"
                ],
                "docstring": "Manages the rotating Jutsu shop inventory and posts updates.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 6
    },
    "HCshinobi\\extensions\\clans.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_get_rarity_color"
        ],
        "classes": {
            "ClanCommands": {
                "methods": [
                    "__init__",
                    "_get_rarity_color"
                ],
                "docstring": "Clan related commands.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 4
    },
    "HCshinobi\\core\\views.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "__init__",
            "update_buttons"
        ],
        "classes": {
            "ConfirmView": {
                "methods": [
                    "__init__"
                ],
                "docstring": "A view for confirming or canceling an action.",
                "base_classes": [
                    "discord.ui.View"
                ]
            },
            "PaginationView": {
                "methods": [
                    "__init__",
                    "update_buttons"
                ],
                "docstring": "A view for paginating through content.",
                "base_classes": [
                    "discord.ui.View"
                ]
            }
        },
        "routes": [],
        "complexity": 6
    },
    "HCshinobi\\extensions\\clan_commands.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_get_rarity_color"
        ],
        "classes": {
            "ClanCommands": {
                "methods": [
                    "__init__",
                    "_get_rarity_color"
                ],
                "docstring": "Commands for clan management.",
                "base_classes": [
                    "commands.Cog"
                ]
            }
        },
        "routes": [],
        "complexity": 4
    },
    "HCshinobi\\tests\\conftest.py": {
        "language": ".py",
        "functions": [
            "setup_test_environment",
            "mock_config",
            "mock_bot",
            "mock_author",
            "mock_recipient",
            "mock_ctx",
            "mock_currency_system",
            "mock_clan_system",
            "mock_config_file",
            "temp_data_dir",
            "mock_token_data",
            "load_side_effect"
        ],
        "classes": {},
        "routes": [],
        "complexity": 12
    },
    "HCshinobi\\tests\\test_currency_commands.py": {
        "language": ".py",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\tests\\commands\\test_mission_commands.py": {
        "language": ".py",
        "functions": [
            "mission_system",
            "character_system",
            "mission_commands"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "HCshinobi\\tests\\core\\test_character_mission_integration.py": {
        "language": ".py",
        "functions": [
            "temp_data_dir",
            "mission_system",
            "setup_missions"
        ],
        "classes": {},
        "routes": [],
        "complexity": 3
    },
    "HCshinobi\\tests\\core\\test_mission_system.py": {
        "language": ".py",
        "functions": [
            "character_system",
            "mission_system",
            "test_mission_initialization",
            "test_get_available_missions",
            "test_accept_mission",
            "test_get_mission_progress",
            "test_mission_requirements",
            "test_load_multiple_mission_files"
        ],
        "classes": {},
        "routes": [],
        "complexity": 8
    },
    "HCshinobi\\utils\\config.py": {
        "language": ".py",
        "functions": [
            "load_env",
            "load_config",
            "save_config",
            "get_required_env",
            "get_optional_env",
            "load_clans",
            "load_modifiers",
            "save_modifiers",
            "get_character_path",
            "load_character",
            "save_character",
            "get_data_dir"
        ],
        "classes": {},
        "routes": [],
        "complexity": 12
    },
    "HCshinobi\\utils\\embeds.py": {
        "language": ".py",
        "functions": [
            "create_error_embed",
            "create_success_embed",
            "create_info_embed",
            "create_warning_embed",
            "create_loading_embed",
            "create_character_embed",
            "create_clan_embed"
        ],
        "classes": {},
        "routes": [],
        "complexity": 7
    },
    "htmlcov\\coverage_html_cb_497bf287.js": {
        "language": ".js",
        "functions": [],
        "classes": {},
        "routes": [],
        "complexity": 0
    },
    "HCshinobi\\core\\progression_engine.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_load_progression_data",
            "_generate_rank_order",
            "_check_wins_vs_rank",
            "_check_mission_completions",
            "_check_known_jutsu",
            "_check_first_mission",
            "_check_stat_threshold",
            "_check_rank",
            "_check_battle_wins"
        ],
        "classes": {
            "ShinobiProgressionEngine": {
                "methods": [
                    "__init__",
                    "_load_progression_data",
                    "_generate_rank_order",
                    "_check_wins_vs_rank",
                    "_check_mission_completions",
                    "_check_known_jutsu",
                    "_check_first_mission",
                    "_check_stat_threshold",
                    "_check_rank",
                    "_check_battle_wins"
                ],
                "docstring": "Handles EXP gain, rank progression, achievements, and titles.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 20
    },
    "HCshinobi\\core\\equipment_shop_system.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "get_shop_inventory"
        ],
        "classes": {
            "EquipmentShopSystem": {
                "methods": [
                    "__init__",
                    "get_shop_inventory"
                ],
                "docstring": "Manages loading, displaying, buying, and selling of equipment.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 4
    },
    "HCshinobi\\core\\battle_actions.py": {
        "language": ".py",
        "functions": [
            "get_effective_stat",
            "resolve_attack",
            "resolve_basic_attack",
            "resolve_jutsu_action",
            "resolve_flee_action"
        ],
        "classes": {},
        "routes": [],
        "complexity": 5
    },
    "HCshinobi\\core\\battle_effects.py": {
        "language": ".py",
        "functions": [
            "tick_status_durations",
            "apply_status_effects",
            "_apply_effects_to_target",
            "can_player_act",
            "add_status_effect",
            "to_dict",
            "from_dict"
        ],
        "classes": {
            "StatusEffect": {
                "methods": [
                    "to_dict",
                    "from_dict"
                ],
                "docstring": "Represents a temporary status effect active during battle.\n\nAttributes:\n    name (str): The name of the effect.\n    effect_type (str): Type of effect (e.g., 'dot', 'hot', 'stat_mod', 'stun').\n    magnitude (float): The strength of the effect (damage, healing, etc.).\n    duration (int): The number of turns remaining.\n    source_player_id (Optional[str]): Who applied the effect.\n    target_stat (Optional[str]): Stat to modify for 'stat_mod' effects.\n    tick_timing (str): When the effect ticks ('start_turn' or 'end_turn').\n    applied_turn (Optional[int]): Turn when effect was applied.",
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 9
    },
    "HCshinobi\\database\\loot_history.py": {
        "language": ".py",
        "functions": [
            "__init__",
            "_ensure_dir_exists",
            "_init_db",
            "log_loot",
            "get_loot_history"
        ],
        "classes": {
            "LootHistoryDB": {
                "methods": [
                    "__init__",
                    "_ensure_dir_exists",
                    "_init_db",
                    "log_loot",
                    "get_loot_history"
                ],
                "docstring": null,
                "base_classes": []
            }
        },
        "routes": [],
        "complexity": 10
    }
}